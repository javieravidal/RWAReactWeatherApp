{"ast":null,"code":"var _jsxFileName = \"/Users/javieravidal/Documentos/shecodesreact/Week4 React/week4/ReactWeatherApp02/WeatherApp2/weatherappreact02/src/City.js\",\n  _s = $RefreshSig$();\nimport './City.css';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction City() {\n  _s();\n  const [ready, setReady] = useState(false);\n  const [temperature, setTemperature] = useState(null);\n  function handleResponse(response) {\n    console.log(response.data);\n    setTemperature(response.data.main.temp);\n    setReady(true);\n  }\n  let weatherData = {\n    city: \"Madrid\",\n    date: \"Sunday, January 01, 2023\",\n    updateTime: \"Last time updated: 00:00\",\n    weatherDescription: \"Clear Sky\"\n  };\n  if (ready) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"City\",\n        children: weatherData.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"currentDate\",\n        children: weatherData.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"currentTime\",\n        children: weatherData.updateTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"currentWeather\",\n        children: weatherData.weatherDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this);\n  } else {\n    let weatherData = {\n      city: \"Madrid\",\n      date: \"Sunday, January 01, 2023\",\n      updateTime: \"Last time updated: 00:00\",\n      weatherDescription: \"Clear Sky\"\n    };\n    const apiKey = \"9f9579090daa27d42e77fa3c3fec2fd7\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${weatherData.city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return \"loading...\";\n  }\n}\n_s(City, \"ssKOMjU7z9Hw+2sBSobKx4D/q8w=\");\n_c = City;\nexport default City;\nvar _c;\n$RefreshReg$(_c, \"City\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","City","_s","ready","setReady","temperature","setTemperature","handleResponse","response","console","log","data","main","temp","weatherData","city","date","updateTime","weatherDescription","children","className","fileName","_jsxFileName","lineNumber","columnNumber","apiKey","apiUrl","get","then","_c","$RefreshReg$"],"sources":["/Users/javieravidal/Documentos/shecodesreact/Week4 React/week4/ReactWeatherApp02/WeatherApp2/weatherappreact02/src/City.js"],"sourcesContent":["import './City.css'\nimport React, { useState }from 'react';\nimport axios from 'axios';\n\nfunction City() {\n    const [ready, setReady] = useState(false);\n    const [temperature, setTemperature] = useState(null);\n    function handleResponse(response){\n        console.log(response.data);\n        setTemperature(response.data.main.temp);\n        setReady(true);\n    }\n    let weatherData = {\n        city: \"Madrid\",\n        date: \"Sunday, January 01, 2023\",\n        updateTime: \"Last time updated: 00:00\",\n        weatherDescription: \"Clear Sky\",\n    }\n    \n    if (ready) {\n        return (\n        <div>\n            <h1 className=\"City\">{weatherData.city}</h1>\n            <p className=\"currentDate\">{weatherData.date}</p>\n            <p className='currentTime'>{weatherData.updateTime}</p>\n            <p className=\"currentWeather\">{weatherData.weatherDescription}</p>\n        </div>\n    );\n} else {\n    let weatherData = {\n        city: \"Madrid\",\n        date: \"Sunday, January 01, 2023\",\n        updateTime: \"Last time updated: 00:00\",\n        weatherDescription: \"Clear Sky\",\n    }\n    const apiKey = \"9f9579090daa27d42e77fa3c3fec2fd7\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${weatherData.city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return \"loading...\";\n}\n}\n\nexport default City;"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AACtC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACpD,SAASU,cAAcA,CAACC,QAAQ,EAAC;IAC7BC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;IAC1BL,cAAc,CAACE,QAAQ,CAACG,IAAI,CAACC,IAAI,CAACC,IAAI,CAAC;IACvCT,QAAQ,CAAC,IAAI,CAAC;EAClB;EACA,IAAIU,WAAW,GAAG;IACdC,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,0BAA0B;IAChCC,UAAU,EAAE,0BAA0B;IACtCC,kBAAkB,EAAE;EACxB,CAAC;EAED,IAAIf,KAAK,EAAE;IACP,oBACAH,OAAA;MAAAmB,QAAA,gBACInB,OAAA;QAAIoB,SAAS,EAAC,MAAM;QAAAD,QAAA,EAAEL,WAAW,CAACC;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5CxB,OAAA;QAAGoB,SAAS,EAAC,aAAa;QAAAD,QAAA,EAAEL,WAAW,CAACE;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjDxB,OAAA;QAAGoB,SAAS,EAAC,aAAa;QAAAD,QAAA,EAAEL,WAAW,CAACG;MAAU;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvDxB,OAAA;QAAGoB,SAAS,EAAC,gBAAgB;QAAAD,QAAA,EAAEL,WAAW,CAACI;MAAkB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC;EAEd,CAAC,MAAM;IACH,IAAIV,WAAW,GAAG;MACdC,IAAI,EAAE,QAAQ;MACdC,IAAI,EAAE,0BAA0B;MAChCC,UAAU,EAAE,0BAA0B;MACtCC,kBAAkB,EAAE;IACxB,CAAC;IACD,MAAMO,MAAM,GAAG,kCAAkC;IACjD,IAAIC,MAAM,GAAI,qDAAoDZ,WAAW,CAACC,IAAK,UAASU,MAAO,eAAc;IACjH3B,KAAK,CAAC6B,GAAG,CAACD,MAAM,CAAC,CAACE,IAAI,CAACrB,cAAc,CAAC;IACtC,OAAO,YAAY;EACvB;AACA;AAACL,EAAA,CApCQD,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AAsCb,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}